package com.seniorcare.cloud.model;

// Generated Nov 20, 2015 3:57:12 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * HubAccesstoken generated by hbm2java
 */
@Entity
@Table(name = "hub_accesstoken", catalog = "seniorcare", uniqueConstraints = @UniqueConstraint(columnNames = "token"))
public class HubAccesstoken implements java.io.Serializable {

	private Integer tokenId;
	private Hubs hubs;
	private String token;
	private Date validUntil;
	private Date createDate;

	public HubAccesstoken() {
	}

	public HubAccesstoken(Hubs hubs, String token, Date validUntil,
			Date createDate) {
		this.hubs = hubs;
		this.token = token;
		this.validUntil = validUntil;
		this.createDate = createDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "tokenID", unique = true, nullable = false)
	public Integer getTokenId() {
		return this.tokenId;
	}

	public void setTokenId(Integer tokenId) {
		this.tokenId = tokenId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "hubID", nullable = false)
	public Hubs getHubs() {
		return this.hubs;
	}

	public void setHubs(Hubs hubs) {
		this.hubs = hubs;
	}

	@Column(name = "token", unique = true, nullable = false)
	public String getToken() {
		return this.token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	@Temporal(TemporalType.TIMESTAMP)	
	@Column(name = "valid_until", nullable = false, length = 0)
	public Date getValidUntil() {
		return this.validUntil;
	}

	public void setValidUntil(Date validUntil) {
		this.validUntil = validUntil;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Generated(GenerationTime.INSERT) 
	@Column(name = "createDate", nullable = false, length = 0)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

}
